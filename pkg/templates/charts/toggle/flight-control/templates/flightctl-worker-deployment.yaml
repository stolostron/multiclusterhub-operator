apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    flightctl.service: flightctl-worker
  name: flightctl-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      flightctl.service: flightctl-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        flightctl.service: flightctl-worker
        ocm-antiaffinity-selector: flightctl-worker
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - flightctl-worker
              topologyKey: topology.kubernetes.io/zone
            weight: 70
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - flightctl-worker
              topologyKey: kubernetes.io/hostname
            weight: 35
      containers:
      - args: []
        env:
{{- if .Values.global.pullSecret }}
        - name: AGENT_IMAGE_PULL_SECRET
          value: {{ .Values.global.pullSecret }}
{{- end }}
{{- if .Values.hubconfig.proxyConfigs }}
        - name: HTTP_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
        - name: HTTPS_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
        - name: NO_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
{{- end }}
        - name: HOME
          value: /root
        - name: KV_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: flightctl-kv-secret
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: masterPassword
              name: flightctl-db-secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: masterUser
              name: flightctl-db-secret
        image: '{{ .Values.global.imageOverrides.flightctl_worker }}'
        imagePullPolicy: '{{ .Values.global.pullPolicy }}'
        name: flightctl-worker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /root/.flightctl/config.yaml
          name: flightctl-worker-config
          readOnly: true
          subPath: config.yaml
      hostIPC: false
      hostNetwork: false
      hostPID: false
{{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
{{- end }}
{{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
{{- if semverCompare ">=4.11.0" .Values.hubconfig.ocpVersion }}
        seccompProfile:
          type: RuntimeDefault
{{- end }}
      serviceAccountName: flightctl-worker
{{- with .Values.hubconfig.tolerations }}
      tolerations:
      {{- range . }}
      - {{ if .Key }} key: {{ .Key }} {{- end }}
        {{ if .Operator }} operator: {{ .Operator }} {{- end }}
        {{ if .Value }} value: {{ .Value }} {{- end }}
        {{ if .Effect }} effect: {{ .Effect }} {{- end }}
        {{ if .TolerationSeconds }} tolerationSeconds: {{ .TolerationSeconds }} {{- end }}
        {{- end }}
{{- end }}
      volumes:
      - configMap:
          name: flightctl-worker-config
        name: flightctl-worker-config
