apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-dr-virt-install
  namespace: open-cluster-management-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
    policy.open-cluster-management.io/description: |-
      Policy is placed on hub or managed clusters with label acm-virt-config=acm-dr-virt-config-file-name.
      Installs OADP and configures DataProtectionApplication on the managed cluster.
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-config-file
        spec:
          customMessage:
            compliant: |-
              The ConfigMap defined by the acm-virt-config label set on the ManagedCluster resource  exists on the hub, in the open-cluster-management-backup namespace.
          remediationAction: inform
          severity: high
          object-templates-raw: |
            {{ `{{hub $config_name := index .ManagedClusterLabels "acm-virt-config" hub}}` }}
            {{ `{{hub $config_file := lookup "v1" "ConfigMap" "" $config_name hub}}` }}
            {{ `{{hub $config_file_exists := eq $config_file.metadata.name $config_name hub}}` }}

            {{ `{{hub if not $config_file_exists hub}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "{{ `{{hub $config_name hub}}` }}"
                      namespace: "open-cluster-management-backup"
            {{ `{{hub else hub}}` }}
                {{ `{{hub $restore_file_name := (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "restore_hub_config_name") hub}}` }}
                {{ `{{hub $restore_file := lookup "v1" "ConfigMap" "" $restore_file_name hub}}` }}
                {{ `{{hub $restore_file_exists := eq $restore_file.metadata.name $restore_file_name hub}}` }}
                {{ `{{hub if not $restore_file_exists hub}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "{{ `{{hub $restore_file_name hub}}` }}"
                      namespace: "open-cluster-management-backup"
                {{ `{{hub end hub}}` }}
                {{ `{{hub $cron_file_name := (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "schedule_hub_config_name") hub}}` }}
                {{ `{{hub $cron_file := lookup "v1" "ConfigMap" "" $cron_file_name hub}}` }}
                {{ `{{hub $cron_file_exists := eq $cron_file.metadata.name $cron_file_name hub}}` }}
                {{ `{{hub if not $cron_file_exists hub}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: {{ `{{hub $cron_file_name hub}}` }}
                      namespace: "open-cluster-management-backup"
                {{ `{{hub end hub}}` }}
                {{ `{{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}` }}
                {{ `{{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}` }}
                {{ `{{- /* check if this is a hub, acm installed  */ -}}` }}
                {{ `{{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}` }}
                {{ `{{- /* ns is the namespace for the OADP deployment  */ -}}` }}
                {{ `{{- $ns := "open-cluster-management-backup" }}` }}
                {{ `{{ if not $is_hub }}` }}
                  {{ `{{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}` }}
                {{ `{{- end }}` }}

                {{ `{{hub $cloud_creds_file_name := (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_hub_secret_name") hub}}` }}
                {{ `{{hub $cloud_creds_file := lookup "v1" "Secret" "" $cloud_creds_file_name hub}}` }}
                {{ `{{hub $cloud_creds_file_exists := eq $cloud_creds_file.metadata.name $cloud_creds_file_name hub}}` }}
                {{ `{{hub if not $cloud_creds_file_exists hub}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: "{{ `{{hub $cloud_creds_file_name hub}}` }}"
                      namespace: {{ `{{ $ns }}` }}
                {{ `{{hub end hub}}` }}
            {{ `{{hub end hub}}` }}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-oadp-channel
        spec:
          remediationAction: inform
          severity: high
          object-templates-raw: |
            {{ `{{hub $config_name := index .ManagedClusterLabels "acm-virt-config" hub}}` }}
            {{ `{{hub $config_file := lookup "v1" "ConfigMap" "" $config_name hub}}` }}
            {{ `{{hub $config_file_exists := eq $config_file.metadata.name $config_name hub}}` }}

            {{ `{{hub if not $config_file_exists hub}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "{{ `{{hub $config_name hub}}` }}"
                      namespace: "open-cluster-management-backup"
            {{ `{{hub else hub}}` }}
              {{ `{{- $ch := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "channel" hub}}" }}` }}
              {{ `{{- range $ss := (lookup "operators.coreos.com/v1alpha1" "Subscription" "" "").items }}` }}
                {{ `{{ if (eq $ss.spec.name "redhat-oadp-operator")  }}` }}
                - complianceType: musthave
                  objectDefinition:
                    kind: Subscription
                    apiVersion: operators.coreos.com/v1alpha1
                    metadata:
                      name: {{ `{{ $ss.metadata.name }}` }}
                      namespace: {{ `{{ $ss.metadata.namespace }}` }}
                    spec:
                      channel: {{ `{{ $ch }}` }}
                    status:
                      conditions:
                        - reason: AllCatalogSourcesHealthy
                          status: 'False'
                          type: CatalogSourcesUnhealthy
                {{ `{{- end }}` }}
              {{ `{{- end }}` }}
              {{ `{{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}` }}
              {{ `{{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}` }}
              {{ `{{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}` }}
              {{ `{{- /* ns is the namespace for the OADP deployment  */ -}}` }}
              {{ `{{- $ns := "open-cluster-management-backup" }}` }}
              {{ `{{ if not $is_hub }}` }}
                {{ `{{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}` }}
              {{ `{{- end }}` }}
              {{ `{{- $csv_name := "oadp-operator" }}` }}
              {{ `{{- $csv_oadp_label := (cat "operators.coreos.com/redhat-oadp-operator" $ns) | replace " " "." }}` }}
              {{ `{{- range $csv := (lookup "operators.coreos.com/v1alpha1" "ClusterServiceVersion" $ns "" $csv_oadp_label ).items }}` }}
                {{ `{{- $csv_name = $csv.metadata.name }}` }}
              {{ `{{- end }}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: ClusterServiceVersion
                    metadata:
                      namespace: {{ `{{ $ns }}` }}
                      name: {{ `{{ $csv_name }}` }}
                      annotations:
                        olm.operatorGroup: redhat-oadp-operator-group
                    status:
                      phase: Succeeded
            {{ `{{hub end hub}}` }}
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-dpa-config
        spec:
          object-templates-raw: |
            {{ `{{- /* check if OADP CRD is installed  */ -}}` }}
            {{ `{{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}` }}
            {{ `{{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $dpa_crd_name  }}` }}
            {{ `{{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}` }}

            {{ `{{ if $dpa_crd_exists }}` }}

              {{ `{{hub $config_name := index .ManagedClusterLabels "acm-virt-config" hub}}` }}
              {{ `{{hub $config_file := lookup "v1" "ConfigMap" "" $config_name hub}}` }}
              {{ `{{hub $config_file_exists := eq $config_file.metadata.name $config_name hub}}` }}

              {{ `{{hub if not $config_file_exists hub}}` }}
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: ConfigMap
                      metadata:
                        name: "{{ `{{hub $config_name hub}}` }}"
                        namespace: "open-cluster-management-backup"
              {{ `{{hub else hub}}` }}

              {{ `{{- /* ns is the namespace for the OADP deployment  */ -}}` }}
              {{ `{{- $ns := "open-cluster-management-backup" }}` }}
              {{ `{{- /* check if this is a hub, acm installed  */ -}}` }}
              {{ `{{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}` }}
              {{ `{{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}` }}
              {{ `{{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}` }}

              {{ `{{- $dpa_name := "" }}` }}
              {{ `{{ if not $is_hub }}` }}
                {{ `{{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}` }}
                {{ `{{- $dpa_name = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_name" hub}}" }}` }}
              {{ `{{ else }}` }}
                {{ `{{- /* get DPA name  */ -}}` }}
                {{ `{{- range $dpa_objs := (lookup "oadp.openshift.io/v1alpha1" "DataProtectionApplication" $ns "").items  }}` }}
                  {{ `{{- $dpa_name = $dpa_objs.metadata.name }}` }}
                {{ `{{- end}}` }}
              {{ `{{- end }}` }}
              {{ `{{- $bsl_name := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "storageLocation" hub}}" }}` }}
              {{ `{{if (eq "" $bsl_name) }}` }}
                {{ `{{- range $bsl_objs := (lookup "velero.io/v1" "BackupStorageLocation" $ns "").items  }}` }}
                  {{ `{{ if and (hasKey $bsl_objs.spec "default") $bsl_objs.spec.default }}` }}
                    {{ `{{- $bsl_name = $bsl_objs.metadata.name }}` }}
                  {{ `{{- end }}` }}
                {{ `{{- end}}` }}
              {{ `{{- end }}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      namespace: {{ `{{ $ns }}` }}
                      name: {{ `{{ $dpa_name }}` }}
                    spec:
                      configuration:
                        velero:
                          defaultPlugins:
                            - csi
                            - openshift
                            - kubevirt
                        nodeAgent:
                          enable: true
                          uploaderType: kopia
                    status:
                      conditions:
                        - reason: Complete
                          status: 'True'
                          type: Reconciled
            
              {{ `{{ if not (eq "" $dpa_name )}}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: velero.io/v1
                    kind: BackupStorageLocation
                    metadata:
                      namespace: {{ `{{ $ns }}` }}
                      {{ `{{if not (eq "" $bsl_name) }}` }}
                      name: {{ `{{ $bsl_name }}` }}
                      {{ `{{- end }}` }}
                      ownerReferences:
                      - apiVersion: oadp.openshift.io/v1alpha1
                        blockOwnerDeletion: true
                        controller: true
                        kind: DataProtectionApplication
                        name: {{ `{{ $dpa_name }}` }}
                    {{ `{{if eq "" $bsl_name }}` }}
                    spec:
                      default: true
                    {{ `{{- end }}` }}
                    status:
                      phase: Available
                {{ `{{- end}}` }}
                {{ `{{hub end hub}}` }}
              {{ `{{- end }}` }}
          remediationAction: inform
          severity: high

    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: install-oadp-copy-config
        spec:
          object-templates-raw: |
            {{ `{{- /* check if this is a hub, acm installed  */ -}}` }}
            {{ `{{- $acm_crd_name := "multiclusterhubs.operator.open-cluster-management.io" }}` }}
            {{ `{{- $acm_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" $acm_crd_name  }}` }}
            {{ `{{- $is_hub := eq $acm_crd.metadata.name  $acm_crd_name }}` }}

            {{ `{{- $oadp_channel := "stable-1.4" }}` }}
            {{ `{{- $subscriptionInstallPlanApproval := "Automatic" }}` }}
            {{ `{{- $channelName := "redhat-oadp-operator" }}` }}
            {{ `{{- $subscriptionSourceNamespace := "openshift-marketplace" }}` }}
            {{ `{{- $subscriptionSource := "redhat-operators" }}` }}

            {{ `{{hub $config_name := index .ManagedClusterLabels "acm-virt-config" hub}}` }}
            {{ `{{hub $config_file := lookup "v1" "ConfigMap" "" $config_name hub}}` }}
            {{ `{{hub $config_file_exists := eq $config_file.metadata.name $config_name hub}}` }}

            {{ `{{hub if $config_file_exists hub}}` }}
                  {{ `{{- $oadp_channel := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "channel" hub}}" }}` }}
                  {{ `{{- $subscPlanConfig := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "subscriptionInstallPlanApproval" hub}}" }}` }}
                  {{ `{{ if not (eq "" $subscPlanConfig) }}` }}
                    {{ `{{- $subscriptionInstallPlanApproval = $subscPlanConfig }}` }}
                  {{ `{{- end }}` }}
                  {{ `{{- $channelNameConfig := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "channelName" hub}}" }}` }}
                  {{ `{{ if not (eq "" $channelNameConfig) }}` }}
                    {{ `{{- $channelName = $channelNameConfig }}` }}
                  {{ `{{- end }}` }}
                  {{ `{{- $subscriptionNsConfig := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "subscriptionSourceNamespace" hub}}" }}` }}
                  {{ `{{ if not (eq "" $subscriptionNsConfig) }}` }}
                    {{ `{{- $subscriptionSourceNamespace = $subscriptionNsConfig }}` }}
                  {{ `{{- end }}` }}
                  {{ `{{- $subscriptionSourceConfig := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "subscriptionSource" hub}}" }}` }}
                  {{ `{{ if not (eq "" $subscriptionSourceConfig) }}` }}
                    {{ `{{- $subscriptionSource = $subscriptionSourceConfig }}` }}
                  {{ `{{- end }}` }}
                  {{ `{{- $startingCSV := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "subscriptionStartingCSV" hub}}" }}` }}

                  {{ `{{- /* ns is the namespace for the OADP deployment  */ -}}` }}
                  {{ `{{- $ns := "open-cluster-management-backup" }}` }}
                  {{ `{{ if not $is_hub }}` }}
                    {{ `{{- $ns = "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "backupNS" hub}}" }}` }}
                  {{ `{{- end }}` }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: {{ `{{ $ns }}` }}

                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: "acm-dr-virt-config--cls"
                      namespace: {{ `{{ $ns }}` }}
                    data: {{ `'{{hub copyConfigMapData "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) hub}}'` }}

              {{ `{{hub $cron_file_name := (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "schedule_hub_config_name") hub}}` }}
              {{ `{{hub $cron_file := lookup "v1" "ConfigMap" "" $cron_file_name hub}}` }}
              {{ `{{hub $cron_file_exists := eq $cron_file.metadata.name $cron_file_name hub}}` }}
              {{ `{{- /* cron_schedule_configmap_name is the name of the main cron config map, copied over to the cluster  */ -}}` }}
              {{ `{{- $cron_schedule_configmap_name := "acm-dr-virt-schedule-cron--cls" }}` }}
              {{ `{{hub if $cron_file_exists hub}}` }}
                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: {{ `{{ $cron_schedule_configmap_name }}` }}
                      namespace: {{ `{{ $ns }}` }}
                    data: '{{ `{{hub copyConfigMapData "" $cron_file_name hub}}` }}'
              {{ `{{hub end hub}}` }}

              {{ `{{- /* for managed clusters only, copy the oadp secret and install OADP  */ -}}` }}
              {{ `{{ if (not $is_hub) }}` }}
                {{ `{{- /* use the subscription name and operator group from the existing OADP installation, if one exists in this ns  */ -}}` }}
                {{ `{{- $subscription_name := "redhat-oadp-operator-subscription" }}` }}
                {{ `{{- /* if another OADP version was installed don't try to install this version  */ -}}` }}
                {{ `{{- $found_other_version := false }}` }}
                {{ `{{- range $ss := (lookup "operators.coreos.com/v1alpha1" "Subscription" "" "").items }}` }}
                  {{ `{{ if and (not $found_other_version) (eq $ss.spec.name "redhat-oadp-operator") }}` }}
                    {{ `{{ if eq $ss.spec.channel $oadp_channel }}` }}
                      {{ `{{- $subscription_name = $ss.metadata.name }}` }}
                      {{ `{{- $channelName = $ss.spec.name }}` }}
                      {{ `{{- $subscriptionInstallPlanApproval := $ss.spec.installPlanApproval }}` }}
                      {{ `{{- $subscriptionSource = $ss.spec.source }}` }}
                      {{ `{{- $subscriptionSourceNamespace = $ss.spec.sourceNamespace }}` }}
                    {{ `{{- else }}` }}
                      {{ `{{- $found_other_version = true }}` }}
                    {{ `{{- end }}` }}
                  {{ `{{- end }}` }}
                {{ `{{- end }}` }}

                {{ `{{- $operator_name := "redhat-oadp-operator-group" }}` }}
                {{ `{{- range $ops := (lookup "operators.coreos.com/v1" "OperatorGroup" $ns "").items }}` }}
                  {{ `{{- $operator_name = $ops.metadata.name }}` }}
                {{ `{{- end }}` }}

                {{ `{{ if not $found_other_version }}` }}
                  {{ `{{hub $cloud_creds_file_name := (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_hub_secret_name") hub}}` }}
                  {{ `{{hub $cloud_creds_file := lookup "v1" "Secret" "" $cloud_creds_file_name hub}}` }}
                  {{ `{{hub $cloud_creds_file_exists := eq $cloud_creds_file.metadata.name $cloud_creds_file_name hub}}` }}
                  {{ `{{hub if $cloud_creds_file_exists hub}}` }}
                  {{ `{{- $credentialsName := "{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "credentials_name" hub}}" }}` }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: {{ `{{ $credentialsName }}` }}
                      namespace: {{ `{{ $ns }}` }}
                    data: '{{ `{{hub copySecretData "" $cloud_creds_file_name hub}}` }}'
                  {{ `{{hub end hub}}` }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1
                    kind: OperatorGroup
                    metadata:
                      name: {{ `{{ $operator_name }}` }}
                      namespace: {{ `{{ $ns }}` }}
                    spec:
                      targetNamespaces:
                      - {{ `{{ $ns }}` }}

                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: Subscription
                    metadata:
                      name: {{ `{{ $subscription_name }}` }}
                      namespace: {{ `{{ $ns }}` }}
                    spec:
                      channel: {{ `{{ $oadp_channel }}` }}
                      installPlanApproval: {{ `{{ $subscriptionInstallPlanApproval }}` }}
                      name: {{ `{{ $channelName }}` }}
                      source: {{ `{{ $subscriptionSource }}` }}
                      sourceNamespace: {{ `{{ $subscriptionSourceNamespace }}` }}
                      {{ `{{ if not (eq "" $startingCSV) }}` }}
                      startingCSV: {{ `{{ $startingCSV }}` }}
                      {{ `{{- end }}` }}

                  {{ `{{- /* tag the csv with the subscription uid; to be used when policy is installed and need to clean up previous policy csv - they are not cleaned up when the policy is uninstalled  */ -}}` }}
                  {{ `{{- $installedSubs := lookup "operators.coreos.com/v1alpha1" "Subscription" $ns $subscription_name }}` }}
                  {{ `{{- $owningSubs := "cluster.open-cluster-management.io/ownSubs" }}` }}

                  {{ `{{ if and (eq $installedSubs.metadata.name $subscription_name) (hasKey $installedSubs.status "installedCSV") }}` }}
                    {{ `{{ $csv_name := $installedSubs.status.installedCSV }}` }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: ClusterServiceVersion
                    metadata:
                      name: {{ `{{ $csv_name }}` }}
                      namespace: {{ `{{ $ns }}` }}
                      annotations:
                       {{ `{{ $owningSubs }}` }}: {{ `{{ $installedSubs.metadata.uid }}` }}
                  {{ `{{- end }}` }}

                  {{ `{{- /* delete any csv created by a previous policy install  */ -}}` }}
                  {{ `{{- range $csv := (lookup "operators.coreos.com/v1alpha1" "ClusterServiceVersion" "" "").items }}` }}
                    {{ `{{ if and (eq $csv.spec.displayName "OADP Operator") (hasKey $csv.metadata.annotations $owningSubs) }}` }}
                      {{ `{{- $otherOwningSubs := index $csv.metadata.annotations $owningSubs }}` }}
                      {{ `{{ if not (eq $otherOwningSubs $installedSubs.metadata.uid )}}` }}
                - complianceType: mustnothave
                  objectDefinition:
                    apiVersion: operators.coreos.com/v1alpha1
                    kind: ClusterServiceVersion
                    metadata:
                      name: {{ `{{ $csv.metadata.name }}` }}
                      namespace: {{ `{{ $csv.metadata.namespace }}` }}
                      {{ `{{- end }}` }}
                    {{ `{{- end }}` }}
                  {{ `{{- end }}` }}

                  {{ `{{- /* check if OADP CRD is installed  */ -}}` }}
                  {{ `{{- $dpa_crd_name := "dataprotectionapplications.oadp.openshift.io" }}` }}
                  {{ `{{- $dpa_crd := lookup "apiextensions.k8s.io/v1" "CustomResourceDefinition" "" "dataprotectionapplications.oadp.openshift.io"  }}` }}
                  {{ `{{- $dpa_crd_exists := eq $dpa_crd.metadata.name  $dpa_crd_name }}` }}
                  {{ `{{- if and {{hub $cloud_creds_file_exists hub}} $dpa_crd_exists }}` }}
                - complianceType: mustonlyhave
                  objectDefinition:
                    apiVersion: oadp.openshift.io/v1alpha1
                    kind: DataProtectionApplication
                    metadata:
                      name: {{ `{{hub fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_name" hub}}` }}
                      namespace: {{ `{{ $ns }}` }}
                    spec: {{ `'{{hub (fromConfigMap "" (printf "%s" (index .ManagedClusterLabels "acm-virt-config")) "dpa_spec") | toLiteral hub}}'` }}
                  {{ `{{- end }}` }}
                {{ `{{- end }}` }}
                {{ `{{- end }}` }}
                {{ `{{hub end hub}}` }}
          remediationAction: enforce
          pruneObjectBehavior: DeleteIfCreated
          severity: high
