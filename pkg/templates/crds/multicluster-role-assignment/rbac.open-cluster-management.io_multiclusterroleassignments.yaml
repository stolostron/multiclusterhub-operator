---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: multiclusterroleassignments.rbac.open-cluster-management.io
spec:
  group: rbac.open-cluster-management.io
  names:
    kind: MulticlusterRoleAssignment
    listKind: MulticlusterRoleAssignmentList
    plural: multiclusterroleassignments
    singular: multiclusterroleassignment
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description:
            MulticlusterRoleAssignment is the Schema for the multiclusterroleassignments
            API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the desired state of MulticlusterRoleAssignment
              properties:
                roleAssignments:
                  description:
                    RoleAssignments defines the list of role assignments
                    for different roles, namespaces, and cluster sets.
                  type: array
                  x-kubernetes-list-type: map
                  x-kubernetes-list-map-keys:
                    - name
                  items:
                    description:
                      RoleAssignment defines a cluster role assignment to
                      specific namespaces and clusters.
                    properties:
                      clusterRole:
                        description:
                          ClusterRole defines the cluster role name to be
                          assigned.
                        minLength: 1
                        type: string
                      clusterSelection:
                        description:
                          ClusterSelection defines the type of cluster selection
                          and the clusters to be selected.
                        properties:
                          clusterNames:
                            description:
                              ClusterNames defines the clusters where the
                              role should be applied.
                            items:
                              type: string
                            minItems: 1
                            type: array
                          type:
                            description: Type defines the type of cluster selection.
                            enum:
                              - clusterNames
                            type: string
                        required:
                          - clusterNames
                          - type
                        type: object
                      name:
                        description: Name defines the name of the role assignment.
                        minLength: 1
                        type: string
                      targetNamespaces:
                        description: |-
                          TargetNamespaces defines what namespaces the role should be applied in for all selected clusters in the role
                          assignment. If TargetNamespaces is not present, the role will be applied to all clusters' namespaces.
                        items:
                          type: string
                        type: array
                    required:
                      - clusterRole
                      - clusterSelection
                      - name
                    type: object
                  minItems: 1
                subject:
                  description:
                    Subject defines the user, group, or service account for
                    all role assignments.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup holds the API group of the referenced subject.
                        Defaults to "" for ServiceAccount subjects.
                        Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                      type: string
                    kind:
                      description: |-
                        Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount".
                        If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                      type: string
                    name:
                      description: Name of the object being referenced.
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty
                        the Authorizer should report an error.
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - roleAssignments
                - subject
              type: object
            status:
              description: status defines the observed state of MulticlusterRoleAssignment
              properties:
                conditions:
                  description: Conditions is the condition list.
                  items:
                    description:
                      Condition contains details for one aspect of the current
                      state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                roleAssignments:
                  description: RoleAssignments provides the status of each role assignment.
                  items:
                    description:
                      RoleAssignmentStatus defines the status of a specific
                      role assignment.
                    properties:
                      createdAt:
                        description: CreatedAt defines the creation time of the roleAssignment.
                        format: date-time
                        type: string
                      message:
                        description:
                          Message provides additional human readable details
                          about the role assignment status.
                        type: string
                      name:
                        description: Name defines the name of the role assignment.
                        type: string
                      reason:
                        description:
                          Reason provides a programmatic identifier for the
                          role assignment status.
                        type: string
                      status:
                        description: Status defines the current status of the role assignment.
                        enum:
                          - Pending
                          - Active
                          - Error
                        type: string
                    required:
                      - createdAt
                      - name
                      - status
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
